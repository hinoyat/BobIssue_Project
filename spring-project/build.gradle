plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.c108'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis 사용을 위한 Starter
	implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE' // Lettuce 클라이언트
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.2'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.780' // S3 버킷 접근
	implementation 'com.amazonaws:aws-java-sdk-s3'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.1.1' // SpringBoot AWS 통합 라이브러리
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.data:spring-data-elasticsearch'

	// QueryDsl 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-core:5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'io.openvidu:openvidu-java-client:2.31.0'



}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean {
	delete file(querydslDir)
}


tasks.named('test') {
	useJUnitPlatform()
}
